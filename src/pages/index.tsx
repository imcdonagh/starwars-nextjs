import Head from 'next/head'
import styles from '@/styles/Home.module.css'
import '@fontsource/roboto/300.css';
import '@fontsource/roboto/400.css';
import '@fontsource/roboto/500.css';
import '@fontsource/roboto/700.css';
import { useState, useEffect } from 'react';
import { getPeople, getPersonDetails } from '../utils/api'
import Stack from '@mui/material/Stack'
import Box from '@mui/material/Box'
import CircularProgress from '@mui/material/CircularProgress';
import Alert from '@mui/material/Alert'
import SearchBar from '../components/SearchBar'
import Person from '@/types/Person';
import GetPeopleResponse from '@/types/GetPeopleResponse';
import PersonDetails from '@/components/PersonDetails';
import GetPersonDetailsResponse from '@/types/GetPersonDetailsResponse';
import { getPersonId } from '@/utils/utils';
import { Pagination } from '@mui/material';
import RocketLaunchIcon from '@mui/icons-material/RocketLaunch';

export default function Home() {

  const [search,setSearch] = useState('')
  const [loading,setLoading] = useState(false)
  const [people,setPeople] = useState<Person[]>([])
  const [currentPersonIndex,setCurrentPersonIndex] = useState(-1)
  const [fetchingDetails,setFetchingDetails] = useState(false)
  const [currentPerson,setCurrentPerson] = useState<Person | null>(null)
  const [currentPersonDetails,setCurrentPersonDetails] = useState<GetPersonDetailsResponse | null>(null)
  
  useEffect(() => {
    if (search) {
      setLoading(true)
      getPeople(search, 1).then((resp: GetPeopleResponse | null) => {
        updatePeople(resp)
      }).finally(() => setLoading(false))
    } else
      updatePeople(null)
  }, [search])

  const updatePeople = (resp: GetPeopleResponse | null) => {
    let people = resp?.results || []
    setPeople(people)
  }

  useEffect(() => {
    if (people.length) setCurrentPersonIndex(0)
    else setCurrentPersonIndex(-1)
  }, [people])

  useEffect(() => {
    if (currentPersonIndex === -1 || !people.length) setCurrentPerson(null)
    else setCurrentPerson(people[currentPersonIndex])
  }, [currentPersonIndex, people])

  useEffect(() => {
    if (!currentPerson) {
      setCurrentPersonDetails(null)
    } else {
      setFetchingDetails(true)
      const id = getPersonId(currentPerson.url)
      getPersonDetails(id).then((resp: GetPersonDetailsResponse | null) => {
        setCurrentPersonDetails(resp)
      }).finally(() => setFetchingDetails(false))
    }
  }, [currentPerson])

  const MainContent = () => {
    if (loading) return <ProgressContent />
    if (!search) return <NoSearchContent />
    if (!people.length) return <NoResultsContent />
    return (
      <Stack spacing={2}>
        <Alert severity="success">
          Found {people.length} character{people.length > 1 ? 's' : ''} matching your search
        </Alert>
        <PaginationContent />
        <Box>
          {
            currentPerson 
            ? <PersonDetails 
                person={currentPerson} 
                details={currentPersonDetails}
                loading={fetchingDetails}
              /> 
            : <></>
          }
        </Box>
      </Stack>
    )
  }

  const ProgressContent = () => {
    return (
      <Box sx={{textAlign:'center'}}>
        <CircularProgress></CircularProgress>
      </Box>
    )
  }

  const NoSearchContent = () => {
    return <Alert severity="info">Enter a character name to search</Alert>
  }

  const NoResultsContent = () => {
    return (
      <Alert severity="error">
        Your search did not match any known characters
      </Alert>
    )
  }

  const PaginationContent = () => {
    if (people.length <= 1) return <></>
    return (
      <Pagination 
        count={people.length} 
        page={currentPersonIndex + 1}
        onChange={onPageChange} 
      ></Pagination>
    )
  }

  const onPageChange = (e: any, page: number) => {
    setCurrentPersonIndex(page - 1)
  }

  return (
    <>
      <Head>
        <title>Star Wars Character Search</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main style={{display:'flex',flexDirection:'column', alignItems:'center',padding:'16px'}}>
        <Box sx={{width:'calc(100% - 32px)',maxWidth:600}}>
          <h1 style={{textAlign: 'center', marginBottom: '24px'}} role="heading">
            <RocketLaunchIcon sx={{marginRight: '8px', fontSize: 24}} />
            Star Wars Character Search
          </h1>
            <Stack spacing={2}>
              <SearchBar value={search} onChange={setSearch}></SearchBar>
              <Box>
                <MainContent />
              </Box>
            </Stack>
        </Box>
      </main>
    </>
  )
}
